[{"/home/enzyme/Desktop/react/impress/cv-project/src/index.js":"1","/home/enzyme/Desktop/react/impress/cv-project/src/App.js":"2","/home/enzyme/Desktop/react/impress/cv-project/src/reportWebVitals.js":"3","/home/enzyme/Desktop/react/impress/cv-project/src/components/Header.js":"4","/home/enzyme/Desktop/react/impress/cv-project/src/components/View.js":"5","/home/enzyme/Desktop/react/impress/cv-project/src/components/Create.js":"6","/home/enzyme/Desktop/react/impress/cv-project/src/components/Edit.js":"7","/home/enzyme/Desktop/react/impress/cv-project/src/components/Tag.js":"8"},{"size":500,"mtime":1608313105836,"results":"9","hashOfConfig":"10"},{"size":738,"mtime":1608450688402,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608313105836,"results":"12","hashOfConfig":"10"},{"size":818,"mtime":1608448725069,"results":"13","hashOfConfig":"10"},{"size":3069,"mtime":1608449848467,"results":"14","hashOfConfig":"10"},{"size":8108,"mtime":1608459440704,"results":"15","hashOfConfig":"10"},{"size":133,"mtime":1608313987242,"results":"16","hashOfConfig":"10"},{"size":2373,"mtime":1608451366698,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"v80qub",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/home/enzyme/Desktop/react/impress/cv-project/src/index.js",[],["37","38"],"/home/enzyme/Desktop/react/impress/cv-project/src/App.js",["39","40","41","42"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport Create from './components/Create';\nimport View from './components/View';\nimport Edit from './components/Edit';\nimport Tag from './components/Tag';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n       <Header />\n      <Switch>\n        <Route path=\"/view\">\n          {/* <Tag /> */}\n          <View />\n        </Route>\n        <Route path=\"/create\">\n          <Create />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/create\" />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","/home/enzyme/Desktop/react/impress/cv-project/src/reportWebVitals.js",[],"/home/enzyme/Desktop/react/impress/cv-project/src/components/Header.js",[],"/home/enzyme/Desktop/react/impress/cv-project/src/components/View.js",[],"/home/enzyme/Desktop/react/impress/cv-project/src/components/Create.js",[],"/home/enzyme/Desktop/react/impress/cv-project/src/components/Edit.js",[],"/home/enzyme/Desktop/react/impress/cv-project/src/components/Tag.js",["43"],"import { List } from 'immutable'\nimport React, { Component } from 'react'\nimport { TagBoxAsync } from 'react-tag-box'\n// import './styles.scss'\n \n// Mock server data. This would normally be in your database.\nconst sampleTags = List(\n  ['Java', 'Python', 'C', 'C++', 'React', 'Ruby', 'Node', 'PHP', 'Javascript'].map(t => ({\n    label: t,\n    value: t\n  }))\n)\n\n \n \n// Mock http request. This would normally make a request to your server to fetch matching tags.\nconst fetch = input => {\n    console.log(input.toLowerCase())\n    const filtered = sampleTags.filter(t=> t.label.toLowerCase().includes(input.toLowerCase()))\n    console.log(sampleTags.filter(t=> t.label.toLowerCase().includes(input.toLowerCase())).toJS())\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(sampleTags.filter(t=> t.value.toString().toLowerCase().includes(input.toString().toLowerCase())).toJS())\n    }, 500)\n  })\n}\n \nexport default class Async extends Component {\n  state = {\n    selected: sampleTags.take()\n  }\n \n  render() {\n    const { selected } = this.state\n    const onSelect = tag => {\n      const newTag = {\n        label: tag.label,\n        value: tag.value || tag.label\n      }\n \n      this.setState({\n        selected: selected.push(newTag)\n      })\n      this.props.onSkillAdd(tag.label)\n    }\n \n    const remove = tag => {\n      this.setState({\n        selected: selected.filter(t => t.value !== tag.value)\n      })\n      this.props.onSkillRemove(tag.label)\n    }\n \n    const placeholder = selected.isEmpty() ? 'Skills - eg: React' :\n      \"Skills - eg: React\"\n \n    return (\n        <div style={{  width: '100%'}}>\n      <TagBoxAsync\n        fetch={fetch}\n        selected={selected.toJS()}\n        onSelect={onSelect}\n        removeTag={remove}\n        backspaceDelete={true}\n        placeholder={placeholder}\n         \n        renderTag={(tag, remove)=> {\n            return (\n                <div style={{color: 'white', marginBottom: 10, display: 'flex', alignItems: 'center', justifyContent: 'center', width: 120, height: 30, backgroundColor: \"gray\"}}>\n                    <b style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flex: 1}}>{tag.label}</b>\n                    <button style={{width: 30}} onClick={(tag)=>remove(tag)}>X</button>\n                </div>\n            \n            )\n        }}\n      />\n      </div>\n    )\n  }\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":8,"column":3,"nodeType":"50","messageId":"51","endLine":8,"endColumn":7},{"ruleId":"48","severity":1,"message":"53","line":13,"column":8,"nodeType":"50","messageId":"51","endLine":13,"endColumn":12},{"ruleId":"48","severity":1,"message":"54","line":14,"column":8,"nodeType":"50","messageId":"51","endLine":14,"endColumn":11},{"ruleId":"48","severity":1,"message":"55","line":19,"column":11,"nodeType":"50","messageId":"51","endLine":19,"endColumn":19},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Edit' is defined but never used.","'Tag' is defined but never used.","'filtered' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]